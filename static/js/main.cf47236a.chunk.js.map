{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","map","option","button","type","onClick","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","list","item","notification","App","useState","goodFeedback","setGoodFeedback","badFeedback","setBadFeedback","neutralFeedback","setNeutralFeedback","countTotalFeedback","target","dataset","feedback","prevState","totalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,kBCAzDD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,gJCQvDC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACR,gCACI,6BAAKD,IACJC,M,gBCcEC,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,qBAAKC,UAAWC,IAAEH,QAAlB,SACKA,EAAQI,KAAI,SAAAC,GAAM,OACf,wBACIH,UAAWC,IAAEG,OACbC,KAAK,SACL,gBAAeF,EACfG,QAASP,EAJb,SAMKI,GADIA,S,gBCQNI,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,2BAA9B,OACf,mCACKD,EAAQ,EACL,qBAAIX,UAAWC,IAAEY,KAAjB,UACI,qBAAIb,UAAWC,IAAEa,KAAjB,kBAA6BN,KAC7B,qBAAIR,UAAWC,IAAEa,KAAjB,qBAAgCL,KAChC,qBAAIT,UAAWC,IAAEa,KAAjB,iBAA4BJ,KAC5B,qBAAIV,UAAWC,IAAEa,KAAjB,oBAA+BH,EAA/B,OACA,qBAAIX,UAAWC,IAAEa,KAAjB,+BAA0CF,EAA1C,UAGJ,mBAAGZ,UAAWC,IAAEc,aAAhB,+BCRG,SAASC,IAEtB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8CJ,mBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAIMC,EAAqB,WACzB,OAAON,EAAeE,EAAcE,GA6BtC,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QApCQ,CAAC,OAAQ,MAAO,WAqCxBC,gBA1Be,SAAC,GAGxB,OAHuC,EAAb0B,OACEC,QAApBC,UAGN,IAAK,OACHR,GAAgB,SAAAS,GAAS,OAAIA,EAAY,KACzC,MAEF,IAAK,UACHL,GAAmB,SAAAK,GAAS,OAAIA,EAAY,KAC5C,MAEF,IAAK,MACHP,GAAe,SAAAO,GAAS,OAAIA,EAAY,KACxC,MAEF,QACE,aAYA,cAAC,EAAD,CAASjC,MAAM,aAAf,SACE,cAAC,EAAD,CACEa,KAAMU,EACNT,QAASa,EACTZ,IAAKU,EACLT,MAAOa,IACPZ,2BAxCgC,WACtC,IAAMiB,EAAgBL,IACtB,OAAOK,EAAgBC,KAAKC,MAAOb,EAAeW,EAAiB,KAAO,EAsCxCG,UCrDtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf47236a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__3HQio\",\"button\":\"FeedbackOptions_button__3n-hy\"};","import PropTypes from \"prop-types\";\n\nconst Section = ({ title, children })=>(\n        <div>\n            <h2>{title}</h2>\n            {children}\n        </div>\n);\n    \nexport default Section;\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.node,\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n    <div className={s.options}>\n        {options.map(option => (\n            <button\n                className={s.button}\n                type=\"button\"\n                data-feedback={option}\n                onClick={onLeaveFeedback}\n                key={option}>\n                {option}\n            </button>\n        ))}\n    </div>\n);\n\nexport default FeedbackOptions;\n\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};","import PropTypes from \"prop-types\";\n//import Section from \"../Section/Section\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedbackPercentage }) => (\n    <>\n        {total > 0 ? (\n            <ul className={s.list}>\n                <li className={s.item}>Good:{good}</li>\n                <li className={s.item}>Neutral:{neutral}</li>\n                <li className={s.item}>Bad:{bad}</li>\n                <li className={s.item}> Total:{total} </li>\n                <li className={s.item}>Positive feedback:{positiveFeedbackPercentage}%</li>\n            </ul>\n        ) : (\n            <p className={s.notification}>no feedback...</p>\n        )}\n    </>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number.isRequired,   \n}","import './App.css';\nimport { useState } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\n\nexport default function App() {\n\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n\n  const options = ['good', 'bad', 'neutral'];\n\n  const countTotalFeedback = () => {\n    return goodFeedback + badFeedback + neutralFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const totalFeedback = countTotalFeedback();\n    return totalFeedback ? Math.round((goodFeedback / totalFeedback) * 100) : 0;\n  };\n\n  const handleFeedback = ({ target }) => {\n  const { feedback } = target.dataset;\n  \n  switch (feedback) {\n    case 'good':\n      setGoodFeedback(prevState => prevState + 1);\n      break;\n    \n    case 'neutral':\n      setNeutralFeedback(prevState => prevState + 1);\n      break;\n    \n    case 'bad':\n      setBadFeedback(prevState => prevState + 1);\n      break;\n    \n    default:\n      return;\n  }\n  };\n\n  return (\n    <div className='App'>\n      <Section title='Please leave feedback'>\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={handleFeedback}\n        />\n      </Section>\n      <Section title='Statistics'>\n        <Statistics\n          good={goodFeedback}\n          neutral={neutralFeedback}\n          bad={badFeedback}\n          total={countTotalFeedback()}\n          positiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n\n    </div>\n  );\n}\n\n\n  \n  \n\n\n  \n\n \n  \n    \n      \n  \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}